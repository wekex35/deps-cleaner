name: Build and Release

on:
  release:
    types: [created]
  push:
    branches: [ github-action-test ]
  workflow_dispatch:

permissions:
    contents: read
    pull-requests: write

jobs:
  build:
    name: Build for ${{ matrix.os.name }}
    runs-on: ${{ matrix.os.host }}
    strategy:
      matrix:
        os: 
          # - name: macos
          #   host: macOS-latest
          #   ext: app 
          #   command: 

          # - name: windows
          #   host: windows-latest
          #   ext: exe
          #   command: 

          - name: ubuntu
            host: ubuntu-latest
            ext: tar.xz
            command: sudo apt-get install golang gcc libgl1-mesa-dev xorg-dev
        # windows-latest, macOS-latest]
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17
      id: go

    - name: Setup Fyne
      run: |
        go install fyne.io/fyne/v2/cmd/fyne@latest
        ${{ matrix.os.command }}

    - name: Build
      run: |
        fyne package 
        dir

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: deps-cleaner.tar.xz
        path: deps-cleaner.tar.xz
  
  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Create Release
      id: create_release
      uses: ncipollo/release-action@v1
      with:
        artifacts: |
          dist/**/*
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        # body: |
        #   Changes in this Release:
        #   - Add new feature
        #   - Fix bugs
        draft: false
        prerelease: false

    - name: Get Artifact
      uses: ncipollo/release-action@v1
      with:
        name: deps-cleaner.tar.xz
        path: dist

    - name: Upload Artifact
      uses: actions/upload-release-asset@v1.0.1
      with:
        asset_path: dist/deps-cleaner.tar.xz
        asset_name: deps-cleaner.tar.xz
        asset_content_type: application/octet-stream
        release_id: ${{ steps.create_release.outputs.release_id }}
        token: ${{ secrets.GITHUB_TOKEN }}
