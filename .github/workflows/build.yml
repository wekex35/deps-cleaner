name: Build and Release

on:
  push:
    tags:
      - 'v*'


jobs:
  build:
    name: Build for ${{ matrix.os.name }}
    runs-on: ${{ matrix.os.host }}
    strategy:
      matrix:
        os: 
          - name: macos
            host: macOS-latest
            ext: app 
            command: 
            ls: ls

          # - name: windows
          #   host: windows-latest
          #   ext: exe
          #   command: 
          #   ls: dir

          # - name: ubuntu
          #   host: ubuntu-latest
          #   ext: tar.xz
          #   command: sudo apt-get install golang gcc libgl1-mesa-dev xorg-dev
          #   ls: ls
        # windows-latest, macOS-latest]
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17
      id: go

    - name: Setup Fyne
      run: |
        go install fyne.io/fyne/v2/cmd/fyne@latest
        ${{ matrix.os.command }}

    - name: Build
      run: |
        fyne package
        ${{ matrix.os.ls }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: deps-cleaner.app
        path: builds



  create_release:
    name: Create Release
    needs: build  
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Get Artifact
        uses: actions/download-artifact@v2
        with:
          path: dist

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: dist

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          artifacts: |
            "dist/builds/deps-cleaner.tar.xz"
            "dist/builds/deps-cleaner.app"
            "dist/builds/deps-cleaner.exe"
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false
          tag: ${{ github.ref }}


  
      # - name: Upload Artifact
      #   uses: actions/upload-release-asset@v1.0.1
      #   with:
      #     asset_path: dist/deps-cleaner.tar.xz
      #     asset_name: deps-cleaner.tar.xz
      #     asset_content_type: application/octet-stream
      #     release_id: ${{ steps.create_release.outputs.release_id }}
      #     token: ${{ secrets.GITHUB_TOKEN }}
  